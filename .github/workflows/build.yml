name: Build Electron Project for Windows

on:
  # push:
  workflow_dispatch:

jobs:
  setup:
    runs-on: windows-latest
    outputs:
      ffmpeg-cache-key: ${{ steps.ffmpeg-cache-key.outputs.key }}
      python-cache-key: ${{ steps.python-cache-key.outputs.key }}
    steps:
      - name: Generate FFmpeg cache key
        id: ffmpeg-cache-key
        run: echo "::set-output name=key::ffmpeg-$(Get-Date -Format yyyyMMdd)"
      - name: Restore FFmpeg cache
        uses: actions/cache@v3
        with:
          path: ffmpeg-master-latest-win64-lgpl
          key: ${{ steps.ffmpeg-cache-key.outputs.key }}
      - name: FFmpeg Download
        if: steps.ffmpeg-cache.outputs.cache-hit != 'true'
        run: Invoke-WebRequest -Uri https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-lgpl.zip -Outfile FFmpeg.zip 
      - name: Extract FFmpeg
        if: steps.ffmpeg-cache.outputs.cache-hit != 'true'
        run: Expand-Archive .\FFmpeg.zip .\
      - name: Generate Python cache key
        id: python-cache-key
        run: echo "::set-output name=key::python-$(Get-Date -Format yyyyMMdd)"
      - name: Restore Python cache
        uses: actions/cache@v3
        with:
          path: python-3.11.4-embed-amd64
          key: ${{ steps.python-cache-key.outputs.key }}
      - name: Python Embeddable Download
        if: steps.python-cache.outputs.cache-hit != 'true'
        run: Invoke-WebRequest -Uri https://www.python.org/ftp/python/3.11.4/python-3.11.4-embed-amd64.zip -Outfile Python.zip
      - name: Extract Python
        if: steps.python-cache.outputs.cache-hit != 'true'
        run: Expand-Archive .\Python.zip .\

  build:
    needs: setup
    runs-on: windows-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm

      - name: Install Node.js dependencies
        run: npm install

      - name: Whisper Models Download
        run: |
          Invoke-WebRequest -Uri https://openaipublic.azureedge.net/main/whisper/models/ed3a0b6b1c0edf879ad9b11b1af5a0e6ab5db9205f891f668f8b0e6c6326e34e/base.pt -OutFile .\src\Whisper\models\base.pt
          Invoke-WebRequest -Uri https://openaipublic.azureedge.net/main/whisper/models/9ecf779972d90ba49c06d968637d720dd632c55bbf19d441fb42bf17a411e794/small.pt -OutFile .\src\Whisper\models\small.pt

      - name: Setup dependencies
        run: |
          Copy-Item -path .\ffmpeg-master-latest-win64-lgpl\bin\ffmpeg.exe .\src\Whisper\
          Copy-Item -path .\python-3.11.4-embed-amd64 .\src\Whisper -Recurse
          (Get-Content .\src\Whisper\Python311._pth) -replace '#import site', 'import site' | Set-Content .\src\Whisper\Python311._pth
          Invoke-WebRequest -Uri https://bootstrap.pypa.io/get-pip.py -Outfile .\src\Whisper\get-pip.py
          .\src\Whisper\Python.exe .\src\Whisper\get-pip.py
          .\src\Whisper\Python.exe -m pip install -U pip
          .\src\Whisper\Python.exe -m pip install git+https://github.com/openai/whisper.git 
          .\src\Whisper\Python.exe -m pip install --force-reinstall "faster-whisper @ https://github.com/guillaumekln/faster-whisper/archive/refs/heads/master.tar.gz"
          .\src\Whisper\Python.exe -m pip install numpy==1.24

      - name: Build Electron project for Windows
        run: npm run build_win

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: AITranscribe-Electron
          path: build/*.zip
